  


<!DOCTYPE html>
<html>
  <head prefix="og: http://ogp.me/ns# fb: http://ogp.me/ns/fb# githubog: http://ogp.me/ns/fb/githubog#">
    <meta charset='utf-8'>
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
        <title>html5-boilerplate/js/vendor/modernizr-2.6.2.min.js at master Â· h5bp/html5-boilerplate</title>
    <link rel="search" type="application/opensearchdescription+xml" href="/opensearch.xml" title="GitHub" />
    <link rel="fluid-icon" href="https://github.com/fluidicon.png" title="GitHub" />
    <link rel="apple-touch-icon" sizes="57x57" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="114x114" href="/apple-touch-icon-114.png" />
    <link rel="apple-touch-icon" sizes="72x72" href="/apple-touch-icon-144.png" />
    <link rel="apple-touch-icon" sizes="144x144" href="/apple-touch-icon-144.png" />
    <link rel="logo" type="image/svg" href="http://github-media-downloads.s3.amazonaws.com/github-logo.svg" />
    <meta name="msapplication-TileImage" content="/windows-tile.png">
    <meta name="msapplication-TileColor" content="#ffffff">

    
    
    <link rel="icon" type="image/x-icon" href="/favicon.ico" />

    <meta content="authenticity_token" name="csrf-param" />
<meta content="r56y5mTkS/vorjQlhb9lqDt4b4wh/G/x+kZBruXMjME=" name="csrf-token" />

    <link href="https://a248.e.akamai.net/assets.github.com/assets/github-4af97e95c6d3eb9a566ad339560cd70651729a71.css" media="screen" rel="stylesheet" type="text/css" />
    <link href="https://a248.e.akamai.net/assets.github.com/assets/github2-5fee4310cb7130fe9656cf64857b2fa600fbabd7.css" media="screen" rel="stylesheet" type="text/css" />
    


      <script src="https://a248.e.akamai.net/assets.github.com/assets/frameworks-ad1b87fda705d87118448f87fb6a20bdb15bd841.js" type="text/javascript"></script>
      <script src="https://a248.e.akamai.net/assets.github.com/assets/github-b27053786ad844f1131cdcf2ce344545cfc35c61.js" type="text/javascript"></script>
      
      <meta http-equiv="x-pjax-version" content="c38adbe003ebcf811acfac11dfe77893">

        <link data-pjax-transient rel='permalink' href='/h5bp/html5-boilerplate/blob/1b0f042e06da46af60d7289b21af85bf58bb4978/js/vendor/modernizr-2.6.2.min.js'>
    <meta property="og:title" content="html5-boilerplate"/>
    <meta property="og:type" content="githubog:gitrepository"/>
    <meta property="og:url" content="https://github.com/h5bp/html5-boilerplate"/>
    <meta property="og:image" content="https://secure.gravatar.com/avatar/7ac667bbdc0a30eaf671479cc06afe92?s=420&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png"/>
    <meta property="og:site_name" content="GitHub"/>
    <meta property="og:description" content="html5-boilerplate - A professional front-end template for building fast, robust, and adaptable web apps or sites."/>
    <meta property="twitter:card" content="summary"/>
    <meta property="twitter:site" content="@GitHub">
    <meta property="twitter:title" content="h5bp/html5-boilerplate"/>

    <meta name="description" content="html5-boilerplate - A professional front-end template for building fast, robust, and adaptable web apps or sites." />

  <link href="https://github.com/h5bp/html5-boilerplate/commits/master.atom" rel="alternate" title="Recent Commits to html5-boilerplate:master" type="application/atom+xml" />

  </head>


  <body class="logged_in page-blob macintosh vis-public env-production  ">
    <div id="wrapper">

      

      

      

      


        <div class="header header-logged-in true">
          <div class="container clearfix">

            <a class="header-logo-blacktocat" href="https://github.com/">
  <span class="mega-icon mega-icon-blacktocat"></span>
</a>

            <div class="divider-vertical"></div>

            
  <a href="/notifications" class="notification-indicator tooltipped downwards" title="You have unread notifications">
    <span class="mail-status unread"></span>
  </a>
  <div class="divider-vertical"></div>


              <div class="command-bar js-command-bar  ">
      <form accept-charset="UTF-8" action="/search" class="command-bar-form" id="top_search_form" method="get">
  <a href="/search/advanced" class="advanced-search-icon tooltipped downwards command-bar-search" id="advanced_search" title="Advanced search"><span class="mini-icon mini-icon-advanced-search "></span></a>

  <input type="text" name="q" id="js-command-bar-field" placeholder="Search or type a command" tabindex="1" data-username="mo-mozafarian" autocapitalize="off">

  <span class="mini-icon help tooltipped downwards" title="Show command bar help">
    <span class="mini-icon mini-icon-help"></span>
  </span>

  <input type="hidden" name="ref" value="commandbar">

  <div class="divider-vertical"></div>
</form>
  <ul class="top-nav">
      <li class="explore"><a href="https://github.com/explore">Explore</a></li>
      <li><a href="https://gist.github.com">Gist</a></li>
      <li><a href="/blog">Blog</a></li>
    <li><a href="http://help.github.com">Help</a></li>
  </ul>
</div>


            

  
    <ul id="user-links">
      <li>
        <a href="https://github.com/mo-mozafarian" class="name">
          <img height="20" src="https://secure.gravatar.com/avatar/6f86915a3fa738eb9f9172ee3313d298?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="20" /> mo-mozafarian
        </a>
      </li>
      <li>
        <a href="/new" id="new_repo" class="tooltipped downwards" title="Create a new repo">
          <span class="mini-icon mini-icon-create"></span>
        </a>
      </li>
      <li>
        <a href="/settings/profile" id="account_settings"
          class="tooltipped downwards"
          title="Account settings ">
          <span class="mini-icon mini-icon-account-settings"></span>
        </a>
      </li>
      <li>
        <a href="/logout" data-method="post" id="logout" class="tooltipped downwards" title="Sign out">
          <span class="mini-icon mini-icon-logout"></span>
        </a>
      </li>
    </ul>



            
          </div>
        </div>


      

      


            <div class="site hfeed" itemscope itemtype="http://schema.org/WebPage">
      <div class="hentry">
        
        <div class="pagehead repohead instapaper_ignore readability-menu ">
          <div class="container">
            <div class="title-actions-bar">
              


<ul class="pagehead-actions">


    <li class="subscription">
      <form accept-charset="UTF-8" action="/notifications/subscribe" data-autosubmit="true" data-remote="true" method="post"><div style="margin:0;padding:0;display:inline"><input name="authenticity_token" type="hidden" value="r56y5mTkS/vorjQlhb9lqDt4b4wh/G/x+kZBruXMjME=" /></div>  <input id="repository_id" name="repository_id" type="hidden" value="486550" />

    <div class="select-menu js-menu-container js-select-menu">
      <span class="minibutton select-menu-button js-menu-target">
        <span class="js-select-button">
          <span class="mini-icon mini-icon-watching"></span>
          Watch
        </span>
      </span>

      <div class="select-menu-modal-holder js-menu-content">
        <div class="select-menu-modal">
          <div class="select-menu-header">
            <span class="select-menu-title">Notification status</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-list js-navigation-container js-select-menu-pane">

            <div class="select-menu-item js-navigation-item js-navigation-target selected">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input checked="checked" id="do_included" name="do" type="radio" value="included" />
                <h4>Not watching</h4>
                <span class="description">You only receive notifications for discussions in which you participate or are @mentioned.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-watching"></span>
                  Watch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item js-navigation-target ">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input id="do_subscribed" name="do" type="radio" value="subscribed" />
                <h4>Watching</h4>
                <span class="description">You receive notifications for all discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-unwatch"></span>
                  Unwatch
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

            <div class="select-menu-item js-navigation-item js-navigation-target ">
              <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
              <div class="select-menu-item-text">
                <input id="do_ignore" name="do" type="radio" value="ignore" />
                <h4>Ignoring</h4>
                <span class="description">You do not receive any notifications for discussions in this repository.</span>
                <span class="js-select-button-text hidden-select-button-text">
                  <span class="mini-icon mini-icon-mute"></span>
                  Stop ignoring
                </span>
              </div>
            </div> <!-- /.select-menu-item -->

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

</form>
    </li>

    <li class="js-toggler-container js-social-container starring-container ">
      <a href="/h5bp/html5-boilerplate/unstar" class="minibutton js-toggler-target star-button starred upwards" title="Unstar this repo" data-remote="true" data-method="post" rel="nofollow">
        <span class="mini-icon mini-icon-remove-star"></span>
        <span class="text">Unstar</span>
      </a>
      <a href="/h5bp/html5-boilerplate/star" class="minibutton js-toggler-target star-button unstarred upwards" title="Star this repo" data-remote="true" data-method="post" rel="nofollow">
        <span class="mini-icon mini-icon-star"></span>
        <span class="text">Star</span>
      </a>
      <a class="social-count js-social-count" href="/h5bp/html5-boilerplate/stargazers">18,934</a>
    </li>

        <li>
          <a href="/h5bp/html5-boilerplate/fork_select" class="minibutton js-toggler-target fork-button lighter upwards" title="Fork this repo" rel="facebox nofollow">
            <span class="mini-icon mini-icon-branch-create"></span>
            <span class="text">Fork</span>
          </a>
          <a href="/h5bp/html5-boilerplate/network" class="social-count">4,063</a>
        </li>


</ul>

              <h1 itemscope itemtype="http://data-vocabulary.org/Breadcrumb" class="entry-title public">
                <span class="repo-label"><span>public</span></span>
                <span class="mega-icon mega-icon-public-repo"></span>
                <span class="author vcard">
                  <a href="/h5bp" class="url fn" itemprop="url" rel="author">
                  <span itemprop="title">h5bp</span>
                  </a></span> /
                <strong><a href="/h5bp/html5-boilerplate" class="js-current-repository">html5-boilerplate</a></strong>
              </h1>
            </div>

            
  <ul class="tabs">
    <li><a href="/h5bp/html5-boilerplate" class="selected" highlight="repo_source repo_downloads repo_commits repo_tags repo_branches">Code</a></li>
    <li><a href="/h5bp/html5-boilerplate/network" highlight="repo_network">Network</a></li>
    <li><a href="/h5bp/html5-boilerplate/pulls" highlight="repo_pulls">Pull Requests <span class='counter'>3</span></a></li>

      <li><a href="/h5bp/html5-boilerplate/issues" highlight="repo_issues">Issues <span class='counter'>10</span></a></li>

      <li><a href="/h5bp/html5-boilerplate/wiki" highlight="repo_wiki">Wiki</a></li>


    <li><a href="/h5bp/html5-boilerplate/graphs" highlight="repo_graphs repo_contributors">Graphs</a></li>


  </ul>
  
<div class="tabnav">

  <span class="tabnav-right">
    <ul class="tabnav-tabs">
          <li><a href="/h5bp/html5-boilerplate/tags" class="tabnav-tab" highlight="repo_tags">Tags <span class="counter ">22</span></a></li>
    </ul>
    
  </span>

  <div class="tabnav-widget scope">


    <div class="select-menu js-menu-container js-select-menu js-branch-menu">
      <a class="minibutton select-menu-button js-menu-target" data-hotkey="w" data-ref="master">
        <span class="mini-icon mini-icon-branch"></span>
        <i>branch:</i>
        <span class="js-select-button">master</span>
      </a>

      <div class="select-menu-modal-holder js-menu-content js-navigation-container js-select-menu-pane">

        <div class="select-menu-modal js-select-menu-pane">
          <div class="select-menu-header">
            <span class="select-menu-title">Switch branches/tags</span>
            <span class="mini-icon mini-icon-remove-close js-menu-close"></span>
          </div> <!-- /.select-menu-header -->

          <div class="select-menu-filters">
            <div class="select-menu-text-filter">
              <input type="text" id="commitish-filter-field" class="js-filterable-field js-navigation-enable" placeholder="Filter branches/tags">
            </div>
            <div class="select-menu-tabs">
              <ul>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="branches" class="js-select-menu-tab">Branches</a>
                </li>
                <li class="select-menu-tab">
                  <a href="#" data-tab-filter="tags" class="js-select-menu-tab">Tags</a>
                </li>
              </ul>
            </div><!-- /.select-menu-tabs -->
          </div><!-- /.select-menu-filters -->

          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="branches" data-filterable-for="commitish-filter-field" data-filterable-type="substring">


              <div class="select-menu-item js-navigation-item js-navigation-target selected">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/master/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="master" rel="nofollow" title="master">master</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/ms-viewport/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="ms-viewport" rel="nofollow" title="ms-viewport">ms-viewport</a>
              </div> <!-- /.select-menu-item -->

              <div class="select-menu-no-results js-not-filterable">Nothing to show</div>
          </div> <!-- /.select-menu-list -->


          <div class="select-menu-list select-menu-tab-bucket js-select-menu-tab-bucket css-truncate" data-tab-filter="tags" data-filterable-for="commitish-filter-field" data-filterable-type="substring">

              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v4.1.0/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v4.1.0" rel="nofollow" title="v4.1.0">v4.1.0</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v4.0.3/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v4.0.3" rel="nofollow" title="v4.0.3">v4.0.3</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v4.0.2/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v4.0.2" rel="nofollow" title="v4.0.2">v4.0.2</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v4.0.1/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v4.0.1" rel="nofollow" title="v4.0.1">v4.0.1</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v4.0.0/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v4.0.0" rel="nofollow" title="v4.0.0">v4.0.0</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v3.0stripped/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v3.0stripped" rel="nofollow" title="v3.0stripped">v3.0stripped</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v3.0.2stripped/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v3.0.2stripped" rel="nofollow" title="v3.0.2stripped">v3.0.2stripped</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v3.0.2/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v3.0.2" rel="nofollow" title="v3.0.2">v3.0.2</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v3.0.1stripped/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v3.0.1stripped" rel="nofollow" title="v3.0.1stripped">v3.0.1stripped</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v3.0.1/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v3.0.1" rel="nofollow" title="v3.0.1">v3.0.1</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v3.0/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v3.0" rel="nofollow" title="v3.0">v3.0</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v2.0stripped/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v2.0stripped" rel="nofollow" title="v2.0stripped">v2.0stripped</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v2.0/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v2.0" rel="nofollow" title="v2.0">v2.0</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v1.0stripped/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v1.0stripped" rel="nofollow" title="v1.0stripped">v1.0stripped</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v1.0rcstripped/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v1.0rcstripped" rel="nofollow" title="v1.0rcstripped">v1.0rcstripped</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v1.0rc/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v1.0rc" rel="nofollow" title="v1.0rc">v1.0rc</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v1.0/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v1.0" rel="nofollow" title="v1.0">v1.0</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v0.9.5stripped/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.9.5stripped" rel="nofollow" title="v0.9.5stripped">v0.9.5stripped</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v0.9.5/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.9.5" rel="nofollow" title="v0.9.5">v0.9.5</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v0.9.1stripped/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.9.1stripped" rel="nofollow" title="v0.9.1stripped">v0.9.1stripped</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v0.9.1/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.9.1" rel="nofollow" title="v0.9.1">v0.9.1</a>
              </div> <!-- /.select-menu-item -->
              <div class="select-menu-item js-navigation-item js-navigation-target ">
                <span class="select-menu-item-icon mini-icon mini-icon-confirm"></span>
                <a href="/h5bp/html5-boilerplate/blob/v0.9/js/vendor/modernizr-2.6.2.min.js" class="js-navigation-open select-menu-item-text js-select-button-text css-truncate-target" data-name="v0.9" rel="nofollow" title="v0.9">v0.9</a>
              </div> <!-- /.select-menu-item -->

            <div class="select-menu-no-results js-not-filterable">Nothing to show</div>

          </div> <!-- /.select-menu-list -->

        </div> <!-- /.select-menu-modal -->
      </div> <!-- /.select-menu-modal-holder -->
    </div> <!-- /.select-menu -->

  </div> <!-- /.scope -->

  <ul class="tabnav-tabs">
    <li><a href="/h5bp/html5-boilerplate" class="selected tabnav-tab" highlight="repo_source">Files</a></li>
    <li><a href="/h5bp/html5-boilerplate/commits/master" class="tabnav-tab" highlight="repo_commits">Commits</a></li>
    <li><a href="/h5bp/html5-boilerplate/branches" class="tabnav-tab" highlight="repo_branches" rel="nofollow">Branches <span class="counter ">2</span></a></li>
  </ul>

</div>

  
  
  


            
          </div>
        </div><!-- /.repohead -->

        <div id="js-repo-pjax-container" class="container context-loader-container" data-pjax-container>
          


<!-- blob contrib key: blob_contributors:v21:b3361135294b1a2453d02d2a9f77a7c7 -->
<!-- blob contrib frag key: views10/v8/blob_contributors:v21:b3361135294b1a2453d02d2a9f77a7c7 -->


<div id="slider">
    <div class="frame-meta">

      <p title="This is a placeholder element" class="js-history-link-replace hidden"></p>

        <div class="breadcrumb">
          <span class='bold'><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/h5bp/html5-boilerplate" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">html5-boilerplate</span></a></span></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/h5bp/html5-boilerplate/tree/master/js" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">js</span></a></span><span class="separator"> / </span><span itemscope="" itemtype="http://data-vocabulary.org/Breadcrumb"><a href="/h5bp/html5-boilerplate/tree/master/js/vendor" class="js-slide-to" data-branch="master" data-direction="back" itemscope="url"><span itemprop="title">vendor</span></a></span><span class="separator"> / </span><strong class="final-path">modernizr-2.6.2.min.js</strong> <span class="js-zeroclipboard zeroclipboard-button" data-clipboard-text="js/vendor/modernizr-2.6.2.min.js" data-copied-hint="copied!" title="copy to clipboard"><span class="mini-icon mini-icon-clipboard"></span></span>
        </div>

      <a href="/h5bp/html5-boilerplate/find/master" class="js-slide-to" data-hotkey="t" style="display:none">Show File Finder</a>


        
  <div class="commit file-history-tease">
    <img class="main-avatar" height="24" src="https://secure.gravatar.com/avatar/c6dece1b6fe39eaf24005ffb579d5638?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
    <span class="author"><a href="/drublic" rel="author">drublic</a></span>
    <time class="js-relative-date" datetime="2012-09-05T13:14:00-07:00" title="2012-09-05 13:14:00">September 05, 2012</time>
    <div class="commit-title">
        <a href="/h5bp/html5-boilerplate/commit/1c6485adb9b98ef2fa50a6c01b8d9fbbdc1dd8fa" class="message">Update Modernizr to v2.6.2</a>
    </div>

    <div class="participation">
      <p class="quickstat"><a href="#blob_contributors_box" rel="facebox"><strong>1</strong> contributor</a></p>
      
    </div>
    <div id="blob_contributors_box" style="display:none">
      <h2>Users on GitHub who have contributed to this file</h2>
      <ul class="facebox-user-list">
        <li>
          <img height="24" src="https://secure.gravatar.com/avatar/c6dece1b6fe39eaf24005ffb579d5638?s=140&amp;d=https://a248.e.akamai.net/assets.github.com%2Fimages%2Fgravatars%2Fgravatar-user-420.png" width="24" />
          <a href="/drublic">drublic</a>
        </li>
      </ul>
    </div>
  </div>


    </div><!-- ./.frame-meta -->

    <div class="frames">
      <div class="frame" data-permalink-url="/h5bp/html5-boilerplate/blob/1b0f042e06da46af60d7289b21af85bf58bb4978/js/vendor/modernizr-2.6.2.min.js" data-title="html5-boilerplate/js/vendor/modernizr-2.6.2.min.js at master Â· h5bp/html5-boilerplate Â· GitHub" data-type="blob">

        <div id="files" class="bubble">
          <div class="file">
            <div class="meta">
              <div class="info">
                <span class="icon"><b class="mini-icon mini-icon-text-file"></b></span>
                <span class="mode" title="File Mode">file</span>
                  <span>5 lines (4 sloc)</span>
                <span>15.414 kb</span>
              </div>
              <div class="actions">
                <div class="button-group">
                        <a class="minibutton tooltipped leftwards"
                           title="Clicking this button will automatically fork this project so you can edit the file"
                           href="/h5bp/html5-boilerplate/edit/master/js/vendor/modernizr-2.6.2.min.js"
                           data-method="post" rel="nofollow">Edit</a>
                  <a href="/h5bp/html5-boilerplate/raw/master/js/vendor/modernizr-2.6.2.min.js" class="button minibutton " id="raw-url">Raw</a>
                    <a href="/h5bp/html5-boilerplate/blame/master/js/vendor/modernizr-2.6.2.min.js" class="button minibutton ">Blame</a>
                  <a href="/h5bp/html5-boilerplate/commits/master/js/vendor/modernizr-2.6.2.min.js" class="button minibutton " rel="nofollow">History</a>
                </div><!-- /.button-group -->
              </div><!-- /.actions -->

            </div>
                <div class="data type-javascript js-blob-data">
      <table cellpadding="0" cellspacing="0" class="lines">
        <tr>
          <td>
            <pre class="line_numbers"><span id="L1" rel="#L1">1</span>
<span id="L2" rel="#L2">2</span>
<span id="L3" rel="#L3">3</span>
<span id="L4" rel="#L4">4</span>
</pre>
          </td>
          <td width="100%">
                  <div class="highlight"><pre><div class='line' id='LC1'><span class="cm">/* Modernizr 2.6.2 (Custom Build) | MIT &amp; BSD</span></div><div class='line' id='LC2'><span class="cm"> * Build: http://modernizr.com/download/#-fontface-backgroundsize-borderimage-borderradius-boxshadow-flexbox-hsla-multiplebgs-opacity-rgba-textshadow-cssanimations-csscolumns-generatedcontent-cssgradients-cssreflections-csstransforms-csstransforms3d-csstransitions-applicationcache-canvas-canvastext-draganddrop-hashchange-history-audio-video-indexeddb-input-inputtypes-localstorage-postmessage-sessionstorage-websockets-websqldatabase-webworkers-geolocation-inlinesvg-smil-svg-svgclippaths-touch-webgl-shiv-mq-cssclasses-addtest-prefixed-teststyles-testprop-testallprops-hasevent-prefixes-domprefixes-load</span></div><div class='line' id='LC3'><span class="cm"> */</span></div><div class='line' id='LC4'><span class="p">;</span><span class="nb">window</span><span class="p">.</span><span class="nx">Modernizr</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">D</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">j</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">E</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">D</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;;&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">===</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">G</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span><span class="o">!!~</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="o">+</span><span class="nx">a</span><span class="p">).</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">b</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">H</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">];</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">G</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="s2">&quot;-&quot;</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">!==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;pfx&quot;</span><span class="o">?</span><span class="nx">e</span><span class="o">:!</span><span class="mi">0</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">I</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">e</span> <span class="k">in</span> <span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]];</span><span class="k">if</span><span class="p">(</span><span class="nx">f</span><span class="o">!==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">d</span><span class="o">===!</span><span class="mi">1</span><span class="o">?</span><span class="nx">a</span><span class="p">[</span><span class="nx">e</span><span class="p">]</span><span class="o">:</span><span class="nx">F</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">bind</span><span class="p">(</span><span class="nx">d</span><span class="o">||</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">f</span><span class="p">}</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}</span><span class="kd">function</span> <span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">charAt</span><span class="p">(</span><span class="mi">0</span><span class="p">).</span><span class="nx">toUpperCase</span><span class="p">()</span><span class="o">+</span><span class="nx">a</span><span class="p">.</span><span class="nx">slice</span><span class="p">(</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">p</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;string&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">H</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="nx">q</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">d</span><span class="p">).</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">I</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">K</span><span class="p">(){</span><span class="nx">e</span><span class="p">.</span><span class="nx">input</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">e</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">u</span><span class="p">[</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=</span><span class="nx">c</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="k">in</span> <span class="nx">k</span><span class="p">;</span><span class="k">return</span> <span class="nx">u</span><span class="p">.</span><span class="nx">list</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">list</span><span class="o">=!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;datalist&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">HTMLDataListElement</span><span class="p">),</span><span class="nx">u</span><span class="p">}(</span><span class="s2">&quot;autocomplete autofocus list placeholder max min multiple pattern required step&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)),</span><span class="nx">e</span><span class="p">.</span><span class="nx">inputtypes</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">d</span><span class="o">&lt;</span><span class="nx">i</span><span class="p">;</span><span class="nx">d</span><span class="o">++</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="s2">&quot;type&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]),</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">type</span><span class="o">!==</span><span class="s2">&quot;text&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">value</span><span class="o">=</span><span class="nx">l</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">cssText</span><span class="o">=</span><span class="s2">&quot;position:absolute;visibility:hidden;&quot;</span><span class="p">,</span><span class="sr">/^range$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">WebkitAppearance</span><span class="o">!==</span><span class="nx">c</span><span class="o">?</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">k</span><span class="p">),</span><span class="nx">h</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">defaultView</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">h</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="kc">null</span><span class="p">).</span><span class="nx">WebkitAppearance</span><span class="o">!==</span><span class="s2">&quot;textfield&quot;</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">!==</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">k</span><span class="p">))</span><span class="o">:</span><span class="sr">/^(search|tel)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="sr">/^(url|email)$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">f</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">checkValidity</span><span class="o">&amp;&amp;</span><span class="nx">k</span><span class="p">.</span><span class="nx">checkValidity</span><span class="p">()</span><span class="o">===!</span><span class="mi">1</span><span class="o">:</span><span class="nx">e</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">value</span><span class="o">!=</span><span class="nx">l</span><span class="p">)),</span><span class="nx">t</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]]</span><span class="o">=!!</span><span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">t</span><span class="p">}(</span><span class="s2">&quot;search tel url email datetime date month week time datetime-local number range color&quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">))}</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="s2">&quot;2.6.2&quot;</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="p">{},</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="s2">&quot;modernizr&quot;</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;input&quot;</span><span class="p">),</span><span class="nx">l</span><span class="o">=</span><span class="s2">&quot;:)&quot;</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="p">{}.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="s2">&quot; -webkit- -moz- -o- -ms- &quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="s2">&quot;Webkit Moz O ms&quot;</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">q</span><span class="o">=</span><span class="nx">o</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">),</span><span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">svg</span><span class="o">:</span><span class="s2">&quot;http://www.w3.org/2000/svg&quot;</span><span class="p">},</span><span class="nx">s</span><span class="o">=</span><span class="p">{},</span><span class="nx">t</span><span class="o">=</span><span class="p">{},</span><span class="nx">u</span><span class="o">=</span><span class="p">{},</span><span class="nx">v</span><span class="o">=</span><span class="p">[],</span><span class="nx">w</span><span class="o">=</span><span class="nx">v</span><span class="p">.</span><span class="nx">slice</span><span class="p">,</span><span class="nx">x</span><span class="p">,</span><span class="nx">y</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">k</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">m</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">body</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">m</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;body&quot;</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nb">parseInt</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="mi">10</span><span class="p">))</span><span class="k">while</span><span class="p">(</span><span class="nx">d</span><span class="o">--</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">j</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">e</span><span class="o">?</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">:</span><span class="nx">h</span><span class="o">+</span><span class="p">(</span><span class="nx">d</span><span class="o">+</span><span class="mi">1</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">j</span><span class="p">);</span><span class="k">return</span> <span class="nx">f</span><span class="o">=</span><span class="p">[</span><span class="s2">&quot;&amp;#173;&quot;</span><span class="p">,</span><span class="s1">&#39;&lt;style id=&quot;s&#39;</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="s1">&#39;&quot;&gt;&#39;</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;&lt;/style&gt;&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">id</span><span class="o">=</span><span class="nx">h</span><span class="p">,(</span><span class="nx">m</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="nx">n</span><span class="p">).</span><span class="nx">innerHTML</span><span class="o">+=</span><span class="nx">f</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">l</span><span class="p">),</span><span class="nx">m</span><span class="o">||</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">background</span><span class="o">=</span><span class="s2">&quot;&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="p">,</span><span class="nx">g</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">n</span><span class="p">)),</span><span class="nx">i</span><span class="o">=</span><span class="nx">c</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">m</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">l</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">n</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="p">.</span><span class="nx">overflow</span><span class="o">=</span><span class="nx">k</span><span class="p">),</span><span class="o">!!</span><span class="nx">i</span><span class="p">},</span><span class="nx">z</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">matchMedia</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">msMatchMedia</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">(</span><span class="nx">b</span><span class="p">).</span><span class="nx">matches</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="p">;</span><span class="k">return</span> <span class="nx">y</span><span class="p">(</span><span class="s2">&quot;@media &quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot; { #&quot;</span><span class="o">+</span><span class="nx">h</span><span class="o">+</span><span class="s2">&quot; { position: absolute; } }&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">d</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">getComputedStyle</span><span class="o">?</span><span class="nx">getComputedStyle</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="kc">null</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">currentStyle</span><span class="p">)[</span><span class="s2">&quot;position&quot;</span><span class="p">]</span><span class="o">==</span><span class="s2">&quot;absolute&quot;</span><span class="p">}),</span><span class="nx">d</span><span class="p">},</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">){</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">||</span><span class="s2">&quot;div&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="s2">&quot;on&quot;</span><span class="o">+</span><span class="nx">d</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="nx">d</span> <span class="k">in</span> <span class="nx">e</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">)),</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="s2">&quot;function&quot;</span><span class="p">),</span><span class="nx">F</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">],</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">d</span><span class="p">]</span><span class="o">=</span><span class="nx">c</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">removeAttribute</span><span class="p">(</span><span class="nx">d</span><span class="p">))),</span><span class="nx">e</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">f</span><span class="p">}</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">{</span><span class="nx">select</span><span class="o">:</span><span class="s2">&quot;input&quot;</span><span class="p">,</span><span class="nx">change</span><span class="o">:</span><span class="s2">&quot;input&quot;</span><span class="p">,</span><span class="nx">submit</span><span class="o">:</span><span class="s2">&quot;form&quot;</span><span class="p">,</span><span class="nx">reset</span><span class="o">:</span><span class="s2">&quot;form&quot;</span><span class="p">,</span><span class="nx">error</span><span class="o">:</span><span class="s2">&quot;img&quot;</span><span class="p">,</span><span class="nx">load</span><span class="o">:</span><span class="s2">&quot;img&quot;</span><span class="p">,</span><span class="nx">abort</span><span class="o">:</span><span class="s2">&quot;img&quot;</span><span class="p">};</span><span class="k">return</span> <span class="nx">d</span><span class="p">}(),</span><span class="nx">B</span><span class="o">=</span><span class="p">{}.</span><span class="nx">hasOwnProperty</span><span class="p">,</span><span class="nx">C</span><span class="p">;</span><span class="o">!</span><span class="nx">F</span><span class="p">(</span><span class="nx">B</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="o">&amp;&amp;!</span><span class="nx">F</span><span class="p">(</span><span class="nx">B</span><span class="p">.</span><span class="nx">call</span><span class="p">,</span><span class="s2">&quot;undefined&quot;</span><span class="p">)</span><span class="o">?</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">B</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)}</span><span class="o">:</span><span class="nx">C</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span> <span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">F</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">constructor</span><span class="p">.</span><span class="nx">prototype</span><span class="p">[</span><span class="nx">b</span><span class="p">],</span><span class="s2">&quot;undefined&quot;</span><span class="p">)},</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="o">||</span><span class="p">(</span><span class="nb">Function</span><span class="p">.</span><span class="nx">prototype</span><span class="p">.</span><span class="nx">bind</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="k">this</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">c</span><span class="o">!=</span><span class="s2">&quot;function&quot;</span><span class="p">)</span><span class="k">throw</span> <span class="k">new</span> <span class="nx">TypeError</span><span class="p">;</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">1</span><span class="p">),</span><span class="nx">e</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">if</span><span class="p">(</span><span class="k">this</span> <span class="k">instanceof</span> <span class="nx">e</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="kd">function</span><span class="p">(){};</span><span class="nx">a</span><span class="p">.</span><span class="nx">prototype</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">prototype</span><span class="p">;</span><span class="kd">var</span> <span class="nx">f</span><span class="o">=</span><span class="k">new</span> <span class="nx">a</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">f</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)));</span><span class="k">return</span> <span class="nb">Object</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">===</span><span class="nx">g</span><span class="o">?</span><span class="nx">g</span><span class="o">:</span><span class="nx">f</span><span class="p">}</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">concat</span><span class="p">(</span><span class="nx">w</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">)))};</span><span class="k">return</span> <span class="nx">e</span><span class="p">}),</span><span class="nx">s</span><span class="p">.</span><span class="nx">flexbox</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;flexWrap&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">canvas</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">);</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">getContext</span><span class="o">&amp;&amp;!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">canvastext</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">e</span><span class="p">.</span><span class="nx">canvas</span><span class="o">&amp;&amp;!!</span><span class="nx">F</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;canvas&quot;</span><span class="p">).</span><span class="nx">getContext</span><span class="p">(</span><span class="s2">&quot;2d&quot;</span><span class="p">).</span><span class="nx">fillText</span><span class="p">,</span><span class="s2">&quot;function&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">webgl</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">WebGLRenderingContext</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">touch</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">c</span><span class="p">;</span><span class="k">return</span><span class="s2">&quot;ontouchstart&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">DocumentTouch</span><span class="o">&amp;&amp;</span><span class="nx">b</span> <span class="k">instanceof</span> <span class="nx">DocumentTouch</span><span class="o">?</span><span class="nx">c</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="nx">y</span><span class="p">([</span><span class="s2">&quot;@media (&quot;</span><span class="p">,</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;touch-enabled),(&quot;</span><span class="p">),</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;)&quot;</span><span class="p">,</span><span class="s2">&quot;{#modernizr{top:9px;position:absolute}}&quot;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">offsetTop</span><span class="o">===</span><span class="mi">9</span><span class="p">}),</span><span class="nx">c</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">geolocation</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;geolocation&quot;</span><span class="k">in</span> <span class="nx">navigator</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">postmessage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">postMessage</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">websqldatabase</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">openDatabase</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">indexedDB</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;indexedDB&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">hashchange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">A</span><span class="p">(</span><span class="s2">&quot;hashchange&quot;</span><span class="p">,</span><span class="nx">a</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">documentMode</span><span class="o">===</span><span class="nx">c</span><span class="o">||</span><span class="nx">b</span><span class="p">.</span><span class="nx">documentMode</span><span class="o">&gt;</span><span class="mi">7</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">history</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">history</span><span class="o">&amp;&amp;!!</span><span class="nx">history</span><span class="p">.</span><span class="nx">pushState</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">draganddrop</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">return</span><span class="s2">&quot;draggable&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">||</span><span class="s2">&quot;ondragstart&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;ondrop&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">websockets</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="s2">&quot;WebSocket&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="o">||</span><span class="s2">&quot;MozWebSocket&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">rgba</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">D</span><span class="p">(</span><span class="s2">&quot;background-color:rgba(150,255,150,.5)&quot;</span><span class="p">),</span><span class="nx">G</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">,</span><span class="s2">&quot;rgba&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">hsla</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">D</span><span class="p">(</span><span class="s2">&quot;background-color:hsla(120,40%,100%,.5)&quot;</span><span class="p">),</span><span class="nx">G</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">,</span><span class="s2">&quot;rgba&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">G</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">backgroundColor</span><span class="p">,</span><span class="s2">&quot;hsla&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">multiplebgs</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">D</span><span class="p">(</span><span class="s2">&quot;background:url(https://),url(https://),red url(https://)&quot;</span><span class="p">),</span><span class="sr">/(url\s*\(.*?){3}/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">background</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">backgroundsize</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;backgroundSize&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">borderimage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;borderImage&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">borderradius</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;borderRadius&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">boxshadow</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;boxShadow&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">textshadow</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">).</span><span class="nx">style</span><span class="p">.</span><span class="nx">textShadow</span><span class="o">===</span><span class="s2">&quot;&quot;</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">opacity</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">E</span><span class="p">(</span><span class="s2">&quot;opacity:.55&quot;</span><span class="p">),</span><span class="sr">/^0.55$/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">opacity</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">cssanimations</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;animationName&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">csscolumns</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;columnCount&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">cssgradients</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="s2">&quot;background-image:&quot;</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="s2">&quot;gradient(linear,left top,right bottom,from(#9f9),to(white));&quot;</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="s2">&quot;linear-gradient(left top,#9f9, white);&quot;</span><span class="p">;</span><span class="k">return</span> <span class="nx">D</span><span class="p">((</span><span class="nx">a</span><span class="o">+</span><span class="s2">&quot;-webkit- &quot;</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">).</span><span class="nx">join</span><span class="p">(</span><span class="nx">b</span><span class="o">+</span><span class="nx">a</span><span class="p">)</span><span class="o">+</span><span class="nx">n</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="nx">c</span><span class="o">+</span><span class="nx">a</span><span class="p">)).</span><span class="nx">slice</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span><span class="o">-</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">)),</span><span class="nx">G</span><span class="p">(</span><span class="nx">j</span><span class="p">.</span><span class="nx">backgroundImage</span><span class="p">,</span><span class="s2">&quot;gradient&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">cssreflections</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;boxReflect&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">csstransforms</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;transform&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">csstransforms3d</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=!!</span><span class="nx">J</span><span class="p">(</span><span class="s2">&quot;perspective&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="o">&amp;&amp;</span><span class="s2">&quot;webkitPerspective&quot;</span><span class="k">in</span> <span class="nx">g</span><span class="p">.</span><span class="nx">style</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">(</span><span class="s2">&quot;@media (transform-3d),(-webkit-transform-3d){#modernizr{left:9px;position:absolute;height:3px;}}&quot;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetLeft</span><span class="o">===</span><span class="mi">9</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">===</span><span class="mi">3</span><span class="p">}),</span><span class="nx">a</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">csstransitions</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span> <span class="nx">J</span><span class="p">(</span><span class="s2">&quot;transition&quot;</span><span class="p">)},</span><span class="nx">s</span><span class="p">.</span><span class="nx">fontface</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">y</span><span class="p">(</span><span class="s1">&#39;@font-face {font-family:&quot;font&quot;;src:url(&quot;https://&quot;)}&#39;</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getElementById</span><span class="p">(</span><span class="s2">&quot;smodernizr&quot;</span><span class="p">),</span><span class="nx">f</span><span class="o">=</span><span class="nx">e</span><span class="p">.</span><span class="nx">sheet</span><span class="o">||</span><span class="nx">e</span><span class="p">.</span><span class="nx">styleSheet</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">cssRules</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">cssRules</span><span class="p">[</span><span class="mi">0</span><span class="p">]</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">cssRules</span><span class="p">[</span><span class="mi">0</span><span class="p">].</span><span class="nx">cssText</span><span class="o">:</span><span class="nx">f</span><span class="p">.</span><span class="nx">cssText</span><span class="o">||</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">;</span><span class="nx">a</span><span class="o">=</span><span class="sr">/src/i</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">.</span><span class="nx">indexOf</span><span class="p">(</span><span class="nx">d</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">])</span><span class="o">===</span><span class="mi">0</span><span class="p">}),</span><span class="nx">a</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">generatedcontent</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="p">;</span><span class="k">return</span> <span class="nx">y</span><span class="p">([</span><span class="s2">&quot;#&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="s2">&quot;{font:0/0 a}#&quot;</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="s1">&#39;:after{content:&quot;&#39;</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="s1">&#39;&quot;;visibility:hidden;font:3px/1 a}&#39;</span><span class="p">].</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">offsetHeight</span><span class="o">&gt;=</span><span class="mi">3</span><span class="p">}),</span><span class="nx">a</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">video</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;video&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nb">Boolean</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">ogg</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s1">&#39;video/ogg; codecs=&quot;theora&quot;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">h264</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s1">&#39;video/mp4; codecs=&quot;avc1.42E01E&quot;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">webm</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s1">&#39;video/webm; codecs=&quot;vp8, vorbis&quot;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">audio</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;audio&quot;</span><span class="p">),</span><span class="nx">c</span><span class="o">=!</span><span class="mi">1</span><span class="p">;</span><span class="k">try</span><span class="p">{</span><span class="k">if</span><span class="p">(</span><span class="nx">c</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="k">new</span> <span class="nb">Boolean</span><span class="p">(</span><span class="nx">c</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">ogg</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s1">&#39;audio/ogg; codecs=&quot;vorbis&quot;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">mp3</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/mpeg;&quot;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">wav</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s1">&#39;audio/wav; codecs=&quot;1&quot;&#39;</span><span class="p">).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">c</span><span class="p">.</span><span class="nx">m4a</span><span class="o">=</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/x-m4a;&quot;</span><span class="p">)</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">canPlayType</span><span class="p">(</span><span class="s2">&quot;audio/aac;&quot;</span><span class="p">)).</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/^no$/</span><span class="p">,</span><span class="s2">&quot;&quot;</span><span class="p">)}</span><span class="k">catch</span><span class="p">(</span><span class="nx">d</span><span class="p">){}</span><span class="k">return</span> <span class="nx">c</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">localstorage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">localStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">localStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}},</span><span class="nx">s</span><span class="p">.</span><span class="nx">sessionstorage</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="k">return</span> <span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">setItem</span><span class="p">(</span><span class="nx">h</span><span class="p">,</span><span class="nx">h</span><span class="p">),</span><span class="nx">sessionStorage</span><span class="p">.</span><span class="nx">removeItem</span><span class="p">(</span><span class="nx">h</span><span class="p">),</span><span class="o">!</span><span class="mi">0</span><span class="p">}</span><span class="k">catch</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="mi">1</span><span class="p">}},</span><span class="nx">s</span><span class="p">.</span><span class="nx">webworkers</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">Worker</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">applicationcache</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">applicationCache</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">svg</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="o">&amp;&amp;!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">svg</span><span class="p">,</span><span class="s2">&quot;svg&quot;</span><span class="p">).</span><span class="nx">createSVGRect</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">inlinesvg</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;div&quot;</span><span class="p">);</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;svg/&gt;&quot;</span><span class="p">,(</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">.</span><span class="nx">namespaceURI</span><span class="p">)</span><span class="o">==</span><span class="nx">r</span><span class="p">.</span><span class="nx">svg</span><span class="p">},</span><span class="nx">s</span><span class="p">.</span><span class="nx">smil</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="o">&amp;&amp;</span><span class="sr">/SVGAnimate/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">svg</span><span class="p">,</span><span class="s2">&quot;animate&quot;</span><span class="p">)))},</span><span class="nx">s</span><span class="p">.</span><span class="nx">svgclippaths</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="k">return</span><span class="o">!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="o">&amp;&amp;</span><span class="sr">/SVGClipPath/</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">m</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElementNS</span><span class="p">(</span><span class="nx">r</span><span class="p">.</span><span class="nx">svg</span><span class="p">,</span><span class="s2">&quot;clipPath&quot;</span><span class="p">)))};</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">L</span> <span class="k">in</span> <span class="nx">s</span><span class="p">)</span><span class="nx">C</span><span class="p">(</span><span class="nx">s</span><span class="p">,</span><span class="nx">L</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">x</span><span class="o">=</span><span class="nx">L</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">(),</span><span class="nx">e</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">=</span><span class="nx">s</span><span class="p">[</span><span class="nx">L</span><span class="p">](),</span><span class="nx">v</span><span class="p">.</span><span class="nx">push</span><span class="p">((</span><span class="nx">e</span><span class="p">[</span><span class="nx">x</span><span class="p">]</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;no-&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">x</span><span class="p">));</span><span class="k">return</span> <span class="nx">e</span><span class="p">.</span><span class="nx">input</span><span class="o">||</span><span class="nx">K</span><span class="p">(),</span><span class="nx">e</span><span class="p">.</span><span class="nx">addTest</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;object&quot;</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">C</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">.</span><span class="nx">addTest</span><span class="p">(</span><span class="nx">d</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">d</span><span class="p">]);</span><span class="k">else</span><span class="p">{</span><span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">toLowerCase</span><span class="p">();</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">!==</span><span class="nx">c</span><span class="p">)</span><span class="k">return</span> <span class="nx">e</span><span class="p">;</span><span class="nx">b</span><span class="o">=</span><span class="k">typeof</span> <span class="nx">b</span><span class="o">==</span><span class="s2">&quot;function&quot;</span><span class="o">?</span><span class="nx">b</span><span class="p">()</span><span class="o">:</span><span class="nx">b</span><span class="p">,</span><span class="k">typeof</span> <span class="nx">f</span><span class="o">!=</span><span class="s2">&quot;undefined&quot;</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">g</span><span class="p">.</span><span class="nx">className</span><span class="o">+=</span><span class="s2">&quot; &quot;</span><span class="o">+</span><span class="p">(</span><span class="nx">b</span><span class="o">?</span><span class="s2">&quot;&quot;</span><span class="o">:</span><span class="s2">&quot;no-&quot;</span><span class="p">)</span><span class="o">+</span><span class="nx">a</span><span class="p">),</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">}</span><span class="k">return</span> <span class="nx">e</span><span class="p">},</span><span class="nx">D</span><span class="p">(</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">i</span><span class="o">=</span><span class="nx">k</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;p&quot;</span><span class="p">),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;head&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">;</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;x&lt;style&gt;&quot;</span><span class="o">+</span><span class="nx">b</span><span class="o">+</span><span class="s2">&quot;&lt;/style&gt;&quot;</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">lastChild</span><span class="p">,</span><span class="nx">d</span><span class="p">.</span><span class="nx">firstChild</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">l</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">r</span><span class="p">.</span><span class="nx">elements</span><span class="p">;</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="o">==</span><span class="s2">&quot;string&quot;</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">:</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="nx">i</span><span class="p">[</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]];</span><span class="k">return</span> <span class="nx">b</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="o">=</span><span class="p">{},</span><span class="nx">h</span><span class="o">++</span><span class="p">,</span><span class="nx">a</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">i</span><span class="p">[</span><span class="nx">h</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">),</span><span class="nx">b</span><span class="p">}</span><span class="kd">function</span> <span class="nx">n</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="k">return</span> <span class="nx">c</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="nx">f</span><span class="o">||</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">c</span><span class="p">));</span><span class="kd">var</span> <span class="nx">g</span><span class="p">;</span><span class="k">return</span> <span class="nx">f</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">a</span><span class="p">].</span><span class="nx">cloneNode</span><span class="p">()</span><span class="o">:</span><span class="nx">e</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">g</span><span class="o">=</span><span class="p">(</span><span class="nx">f</span><span class="p">.</span><span class="nx">cache</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">createElem</span><span class="p">(</span><span class="nx">a</span><span class="p">)).</span><span class="nx">cloneNode</span><span class="p">()</span><span class="o">:</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">createElem</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">g</span><span class="p">.</span><span class="nx">canHaveChildren</span><span class="o">&amp;&amp;!</span><span class="nx">d</span><span class="p">.</span><span class="nx">test</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">f</span><span class="p">.</span><span class="nx">frag</span><span class="p">.</span><span class="nx">appendChild</span><span class="p">(</span><span class="nx">g</span><span class="p">)</span><span class="o">:</span><span class="nx">g</span><span class="p">}</span><span class="kd">function</span> <span class="nx">o</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="k">if</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">();</span><span class="nx">c</span><span class="o">=</span><span class="nx">c</span><span class="o">||</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="kd">var</span> <span class="nx">d</span><span class="o">=</span><span class="nx">c</span><span class="p">.</span><span class="nx">frag</span><span class="p">.</span><span class="nx">cloneNode</span><span class="p">(),</span><span class="nx">e</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="nx">l</span><span class="p">(),</span><span class="nx">g</span><span class="o">=</span><span class="nx">f</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="k">for</span><span class="p">(;</span><span class="nx">e</span><span class="o">&lt;</span><span class="nx">g</span><span class="p">;</span><span class="nx">e</span><span class="o">++</span><span class="p">)</span><span class="nx">d</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">f</span><span class="p">[</span><span class="nx">e</span><span class="p">]);</span><span class="k">return</span> <span class="nx">d</span><span class="p">}</span><span class="kd">function</span> <span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">b</span><span class="p">.</span><span class="nx">cache</span><span class="o">||</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">cache</span><span class="o">=</span><span class="p">{},</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElem</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">createFrag</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">frag</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createFrag</span><span class="p">()),</span><span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">r</span><span class="p">.</span><span class="nx">shivMethods</span><span class="o">?</span><span class="nx">n</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">)</span><span class="o">:</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElem</span><span class="p">(</span><span class="nx">c</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="o">=</span><span class="nb">Function</span><span class="p">(</span><span class="s2">&quot;h,f&quot;</span><span class="p">,</span><span class="s2">&quot;return function(){var n=f.cloneNode(),c=n.createElement;h.shivMethods&amp;&amp;(&quot;</span><span class="o">+</span><span class="nx">l</span><span class="p">().</span><span class="nx">join</span><span class="p">().</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/\w+/g</span><span class="p">,</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">createElem</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">frag</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="s1">&#39;c(&quot;&#39;</span><span class="o">+</span><span class="nx">a</span><span class="o">+</span><span class="s1">&#39;&quot;)&#39;</span><span class="p">})</span><span class="o">+</span><span class="s2">&quot;);return n}&quot;</span><span class="p">)(</span><span class="nx">r</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">frag</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">q</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">a</span><span class="o">||</span><span class="p">(</span><span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">);</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">m</span><span class="p">(</span><span class="nx">a</span><span class="p">);</span><span class="k">return</span> <span class="nx">r</span><span class="p">.</span><span class="nx">shivCSS</span><span class="o">&amp;&amp;!</span><span class="nx">f</span><span class="o">&amp;&amp;!</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasCSS</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="p">.</span><span class="nx">hasCSS</span><span class="o">=!!</span><span class="nx">k</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;article,aside,figcaption,figure,footer,header,hgroup,nav,section{display:block}mark{background:#FF0;color:#000}&quot;</span><span class="p">)),</span><span class="nx">j</span><span class="o">||</span><span class="nx">p</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">),</span><span class="nx">a</span><span class="p">}</span><span class="kd">var</span> <span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">html5</span><span class="o">||</span><span class="p">{},</span><span class="nx">d</span><span class="o">=</span><span class="sr">/^&lt;|^(?:button|map|select|textarea|object|iframe|option|optgroup)$/i</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="sr">/^(?:a|b|code|div|fieldset|h1|h2|h3|h4|h5|h6|i|label|li|ol|p|q|span|strong|style|table|tbody|td|th|tr|ul)$/i</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="o">=</span><span class="s2">&quot;_html5shiv&quot;</span><span class="p">,</span><span class="nx">h</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="p">{},</span><span class="nx">j</span><span class="p">;(</span><span class="kd">function</span><span class="p">(){</span><span class="k">try</span><span class="p">{</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span><span class="nx">a</span><span class="p">.</span><span class="nx">innerHTML</span><span class="o">=</span><span class="s2">&quot;&lt;xyz&gt;&lt;/xyz&gt;&quot;</span><span class="p">,</span><span class="nx">f</span><span class="o">=</span><span class="s2">&quot;hidden&quot;</span><span class="k">in</span> <span class="nx">a</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">childNodes</span><span class="p">.</span><span class="nx">length</span><span class="o">==</span><span class="mi">1</span><span class="o">||</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;a&quot;</span><span class="p">);</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="p">();</span><span class="k">return</span> <span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">cloneNode</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">createDocumentFragment</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="o">||</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">.</span><span class="nx">createElement</span><span class="o">==</span><span class="s2">&quot;undefined&quot;</span><span class="p">}()}</span><span class="k">catch</span><span class="p">(</span><span class="nx">c</span><span class="p">){</span><span class="nx">f</span><span class="o">=!</span><span class="mi">0</span><span class="p">,</span><span class="nx">j</span><span class="o">=!</span><span class="mi">0</span><span class="p">}})();</span><span class="kd">var</span> <span class="nx">r</span><span class="o">=</span><span class="p">{</span><span class="nx">elements</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">elements</span><span class="o">||</span><span class="s2">&quot;abbr article aside audio bdi canvas data datalist details figcaption figure footer header hgroup mark meter nav output progress section summary time video&quot;</span><span class="p">,</span><span class="nx">shivCSS</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">shivCSS</span><span class="o">!==!</span><span class="mi">1</span><span class="p">,</span><span class="nx">supportsUnknownElements</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">shivMethods</span><span class="o">:</span><span class="nx">c</span><span class="p">.</span><span class="nx">shivMethods</span><span class="o">!==!</span><span class="mi">1</span><span class="p">,</span><span class="nx">type</span><span class="o">:</span><span class="s2">&quot;default&quot;</span><span class="p">,</span><span class="nx">shivDocument</span><span class="o">:</span><span class="nx">q</span><span class="p">,</span><span class="nx">createElement</span><span class="o">:</span><span class="nx">n</span><span class="p">,</span><span class="nx">createDocumentFragment</span><span class="o">:</span><span class="nx">o</span><span class="p">};</span><span class="nx">a</span><span class="p">.</span><span class="nx">html5</span><span class="o">=</span><span class="nx">r</span><span class="p">,</span><span class="nx">q</span><span class="p">(</span><span class="nx">b</span><span class="p">)}(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">e</span><span class="p">.</span><span class="nx">_version</span><span class="o">=</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_prefixes</span><span class="o">=</span><span class="nx">n</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_domPrefixes</span><span class="o">=</span><span class="nx">q</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">_cssomPrefixes</span><span class="o">=</span><span class="nx">p</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">mq</span><span class="o">=</span><span class="nx">z</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">hasEvent</span><span class="o">=</span><span class="nx">A</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">testProp</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="nx">H</span><span class="p">([</span><span class="nx">a</span><span class="p">])},</span><span class="nx">e</span><span class="p">.</span><span class="nx">testAllProps</span><span class="o">=</span><span class="nx">J</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">testStyles</span><span class="o">=</span><span class="nx">y</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">prefixed</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="o">?</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">)</span><span class="o">:</span><span class="nx">J</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="s2">&quot;pfx&quot;</span><span class="p">)},</span><span class="nx">g</span><span class="p">.</span><span class="nx">className</span><span class="o">=</span><span class="nx">g</span><span class="p">.</span><span class="nx">className</span><span class="p">.</span><span class="nx">replace</span><span class="p">(</span><span class="sr">/(^|\s)no-js(\s|$)/</span><span class="p">,</span><span class="s2">&quot;$1$2&quot;</span><span class="p">)</span><span class="o">+</span><span class="p">(</span><span class="nx">f</span><span class="o">?</span><span class="s2">&quot; js &quot;</span><span class="o">+</span><span class="nx">v</span><span class="p">.</span><span class="nx">join</span><span class="p">(</span><span class="s2">&quot; &quot;</span><span class="p">)</span><span class="o">:</span><span class="s2">&quot;&quot;</span><span class="p">),</span><span class="nx">e</span><span class="p">}(</span><span class="k">this</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nb">document</span><span class="p">),</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="kd">function</span> <span class="nx">d</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;[object Function]&quot;</span><span class="o">==</span><span class="nx">o</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)}</span><span class="kd">function</span> <span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;string&quot;</span><span class="o">==</span><span class="k">typeof</span> <span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">f</span><span class="p">(){}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="o">!</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;loaded&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;complete&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">||</span><span class="s2">&quot;uninitialized&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">p</span><span class="p">.</span><span class="nx">shift</span><span class="p">();</span><span class="nx">q</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">a</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="o">?</span><span class="nx">m</span><span class="p">(</span><span class="kd">function</span><span class="p">(){(</span><span class="s2">&quot;c&quot;</span><span class="o">==</span><span class="nx">a</span><span class="p">.</span><span class="nx">t</span><span class="o">?</span><span class="nx">B</span><span class="p">.</span><span class="nx">injectCss</span><span class="o">:</span><span class="nx">B</span><span class="p">.</span><span class="nx">injectJs</span><span class="p">)(</span><span class="nx">a</span><span class="p">.</span><span class="nx">s</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">a</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">x</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">e</span><span class="p">,</span><span class="mi">1</span><span class="p">)},</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">a</span><span class="p">(),</span><span class="nx">h</span><span class="p">())</span><span class="o">:</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">}</span><span class="kd">function</span> <span class="nx">i</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(</span><span class="nx">b</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="nx">o</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">readyState</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">u</span><span class="p">.</span><span class="nx">r</span><span class="o">=</span><span class="nx">o</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="o">!</span><span class="nx">q</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(),</span><span class="nx">l</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kc">null</span><span class="p">,</span><span class="nx">b</span><span class="p">)){</span><span class="s2">&quot;img&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">m</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">t</span><span class="p">.</span><span class="nx">removeChild</span><span class="p">(</span><span class="nx">l</span><span class="p">)},</span><span class="mi">50</span><span class="p">);</span><span class="k">for</span><span class="p">(</span><span class="kd">var</span> <span class="nx">d</span> <span class="k">in</span> <span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">])</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">d</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">][</span><span class="nx">d</span><span class="p">].</span><span class="nx">onload</span><span class="p">()}}</span><span class="kd">var</span> <span class="nx">j</span><span class="o">=</span><span class="nx">j</span><span class="o">||</span><span class="nx">B</span><span class="p">.</span><span class="nx">errorTimeout</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">o</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="p">{</span><span class="nx">t</span><span class="o">:</span><span class="nx">d</span><span class="p">,</span><span class="nx">s</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">e</span><span class="o">:</span><span class="nx">f</span><span class="p">,</span><span class="nx">a</span><span class="o">:</span><span class="nx">i</span><span class="p">,</span><span class="nx">x</span><span class="o">:</span><span class="nx">j</span><span class="p">};</span><span class="mi">1</span><span class="o">===</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">=</span><span class="p">[]),</span><span class="s2">&quot;object&quot;</span><span class="o">==</span><span class="nx">a</span><span class="o">?</span><span class="nx">l</span><span class="p">.</span><span class="nx">data</span><span class="o">=</span><span class="nx">c</span><span class="o">:</span><span class="p">(</span><span class="nx">l</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">c</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="p">.</span><span class="nx">width</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">height</span><span class="o">=</span><span class="s2">&quot;0&quot;</span><span class="p">,</span><span class="nx">l</span><span class="p">.</span><span class="nx">onerror</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">l</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">r</span><span class="p">)},</span><span class="nx">p</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">u</span><span class="p">),</span><span class="s2">&quot;img&quot;</span><span class="o">!=</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">r</span><span class="o">||</span><span class="mi">2</span><span class="o">===</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">]</span><span class="o">?</span><span class="p">(</span><span class="nx">t</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span><span class="nx">s</span><span class="o">?</span><span class="kc">null</span><span class="o">:</span><span class="nx">n</span><span class="p">),</span><span class="nx">m</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">j</span><span class="p">))</span><span class="o">:</span><span class="nx">y</span><span class="p">[</span><span class="nx">c</span><span class="p">].</span><span class="nx">push</span><span class="p">(</span><span class="nx">l</span><span class="p">))}</span><span class="kd">function</span> <span class="nx">j</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">){</span><span class="k">return</span> <span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">b</span><span class="o">=</span><span class="nx">b</span><span class="o">||</span><span class="s2">&quot;j&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">?</span><span class="nx">i</span><span class="p">(</span><span class="s2">&quot;c&quot;</span><span class="o">==</span><span class="nx">b</span><span class="o">?</span><span class="nx">v</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">++</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">f</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">p</span><span class="p">.</span><span class="nx">splice</span><span class="p">(</span><span class="k">this</span><span class="p">.</span><span class="nx">i</span><span class="o">++</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="mi">1</span><span class="o">==</span><span class="nx">p</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">()),</span><span class="k">this</span><span class="p">}</span><span class="kd">function</span> <span class="nx">k</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">B</span><span class="p">;</span><span class="k">return</span> <span class="nx">a</span><span class="p">.</span><span class="nx">loader</span><span class="o">=</span><span class="p">{</span><span class="nx">load</span><span class="o">:</span><span class="nx">j</span><span class="p">,</span><span class="nx">i</span><span class="o">:</span><span class="mi">0</span><span class="p">},</span><span class="nx">a</span><span class="p">}</span><span class="kd">var</span> <span class="nx">l</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">documentElement</span><span class="p">,</span><span class="nx">m</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">setTimeout</span><span class="p">,</span><span class="nx">n</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">getElementsByTagName</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">],</span><span class="nx">o</span><span class="o">=</span><span class="p">{}.</span><span class="nx">toString</span><span class="p">,</span><span class="nx">p</span><span class="o">=</span><span class="p">[],</span><span class="nx">q</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">r</span><span class="o">=</span><span class="s2">&quot;MozAppearance&quot;</span><span class="k">in</span> <span class="nx">l</span><span class="p">.</span><span class="nx">style</span><span class="p">,</span><span class="nx">s</span><span class="o">=</span><span class="nx">r</span><span class="o">&amp;&amp;!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">createRange</span><span class="p">().</span><span class="nx">compareNode</span><span class="p">,</span><span class="nx">t</span><span class="o">=</span><span class="nx">s</span><span class="o">?</span><span class="nx">l</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">opera</span><span class="o">&amp;&amp;</span><span class="s2">&quot;[object Opera]&quot;</span><span class="o">==</span><span class="nx">o</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">opera</span><span class="p">),</span><span class="nx">l</span><span class="o">=!!</span><span class="nx">b</span><span class="p">.</span><span class="nx">attachEvent</span><span class="o">&amp;&amp;!</span><span class="nx">l</span><span class="p">,</span><span class="nx">u</span><span class="o">=</span><span class="nx">r</span><span class="o">?</span><span class="s2">&quot;object&quot;</span><span class="o">:</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;script&quot;</span><span class="o">:</span><span class="s2">&quot;img&quot;</span><span class="p">,</span><span class="nx">v</span><span class="o">=</span><span class="nx">l</span><span class="o">?</span><span class="s2">&quot;script&quot;</span><span class="o">:</span><span class="nx">u</span><span class="p">,</span><span class="nx">w</span><span class="o">=</span><span class="nb">Array</span><span class="p">.</span><span class="nx">isArray</span><span class="o">||</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span><span class="s2">&quot;[object Array]&quot;</span><span class="o">==</span><span class="nx">o</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">x</span><span class="o">=</span><span class="p">[],</span><span class="nx">y</span><span class="o">=</span><span class="p">{},</span><span class="nx">z</span><span class="o">=</span><span class="p">{</span><span class="nx">timeout</span><span class="o">:</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="k">return</span> <span class="nx">b</span><span class="p">.</span><span class="nx">length</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">a</span><span class="p">.</span><span class="nx">timeout</span><span class="o">=</span><span class="nx">b</span><span class="p">[</span><span class="mi">0</span><span class="p">]),</span><span class="nx">a</span><span class="p">}},</span><span class="nx">A</span><span class="p">,</span><span class="nx">B</span><span class="p">;</span><span class="nx">B</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">function</span> <span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;!&quot;</span><span class="p">),</span><span class="nx">b</span><span class="o">=</span><span class="nx">x</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">pop</span><span class="p">(),</span><span class="nx">d</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="p">{</span><span class="nx">url</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">origUrl</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">prefixes</span><span class="o">:</span><span class="nx">a</span><span class="p">},</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">d</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">g</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">f</span><span class="p">].</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;=&quot;</span><span class="p">),(</span><span class="nx">e</span><span class="o">=</span><span class="nx">z</span><span class="p">[</span><span class="nx">g</span><span class="p">.</span><span class="nx">shift</span><span class="p">()])</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">c</span><span class="o">=</span><span class="nx">e</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="nx">g</span><span class="p">));</span><span class="k">for</span><span class="p">(</span><span class="nx">f</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">f</span><span class="o">&lt;</span><span class="nx">b</span><span class="p">;</span><span class="nx">f</span><span class="o">++</span><span class="p">)</span><span class="nx">c</span><span class="o">=</span><span class="nx">x</span><span class="p">[</span><span class="nx">f</span><span class="p">](</span><span class="nx">c</span><span class="p">);</span><span class="k">return</span> <span class="nx">c</span><span class="p">}</span><span class="kd">function</span> <span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">){</span><span class="kd">var</span> <span class="nx">i</span><span class="o">=</span><span class="nx">b</span><span class="p">(</span><span class="nx">a</span><span class="p">),</span><span class="nx">j</span><span class="o">=</span><span class="nx">i</span><span class="p">.</span><span class="nx">autoCallback</span><span class="p">;</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">).</span><span class="nx">pop</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">).</span><span class="nx">shift</span><span class="p">(),</span><span class="nx">i</span><span class="p">.</span><span class="nx">bypass</span><span class="o">||</span><span class="p">(</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">e</span><span class="o">=</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">?</span><span class="nx">e</span><span class="o">:</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">||</span><span class="nx">e</span><span class="p">[</span><span class="nx">g</span><span class="p">]</span><span class="o">||</span><span class="nx">e</span><span class="p">[</span><span class="nx">a</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;/&quot;</span><span class="p">).</span><span class="nx">pop</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">)[</span><span class="mi">0</span><span class="p">]]),</span><span class="nx">i</span><span class="p">.</span><span class="nx">instead</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">instead</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">f</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">h</span><span class="p">)</span><span class="o">:</span><span class="p">(</span><span class="nx">y</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">]</span><span class="o">?</span><span class="nx">i</span><span class="p">.</span><span class="nx">noexec</span><span class="o">=!</span><span class="mi">0</span><span class="o">:</span><span class="nx">y</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">]</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">f</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">forceCSS</span><span class="o">||!</span><span class="nx">i</span><span class="p">.</span><span class="nx">forceJS</span><span class="o">&amp;&amp;</span><span class="s2">&quot;css&quot;</span><span class="o">==</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">.</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;.&quot;</span><span class="p">).</span><span class="nx">pop</span><span class="p">().</span><span class="nx">split</span><span class="p">(</span><span class="s2">&quot;?&quot;</span><span class="p">).</span><span class="nx">shift</span><span class="p">()</span><span class="o">?</span><span class="s2">&quot;c&quot;</span><span class="o">:</span><span class="nx">c</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">noexec</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">attrs</span><span class="p">,</span><span class="nx">i</span><span class="p">.</span><span class="nx">timeout</span><span class="p">),(</span><span class="nx">d</span><span class="p">(</span><span class="nx">e</span><span class="p">)</span><span class="o">||</span><span class="nx">d</span><span class="p">(</span><span class="nx">j</span><span class="p">))</span><span class="o">&amp;&amp;</span><span class="nx">f</span><span class="p">.</span><span class="nx">load</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">k</span><span class="p">(),</span><span class="nx">e</span><span class="o">&amp;&amp;</span><span class="nx">e</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">origUrl</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">j</span><span class="p">(</span><span class="nx">i</span><span class="p">.</span><span class="nx">origUrl</span><span class="p">,</span><span class="nx">h</span><span class="p">,</span><span class="nx">g</span><span class="p">),</span><span class="nx">y</span><span class="p">[</span><span class="nx">i</span><span class="p">.</span><span class="nx">url</span><span class="p">]</span><span class="o">=</span><span class="mi">2</span><span class="p">})))}</span><span class="kd">function</span> <span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="kd">function</span> <span class="nx">c</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">c</span><span class="o">||</span><span class="p">(</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="p">()}),</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">h</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nb">Object</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">===</span><span class="nx">a</span><span class="p">)</span><span class="k">for</span><span class="p">(</span><span class="nx">n</span> <span class="k">in</span> <span class="nx">m</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="mi">0</span><span class="p">,</span><span class="nx">c</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">c</span> <span class="k">in</span> <span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">c</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="o">++</span><span class="p">;</span><span class="k">return</span> <span class="nx">b</span><span class="p">}(),</span><span class="nx">a</span><span class="p">)</span><span class="nx">a</span><span class="p">.</span><span class="nx">hasOwnProperty</span><span class="p">(</span><span class="nx">n</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="o">!</span><span class="nx">c</span><span class="o">&amp;&amp;!--</span><span class="nx">m</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">d</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">?</span><span class="nx">j</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">a</span><span class="o">=</span><span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">k</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">a</span><span class="p">),</span><span class="nx">l</span><span class="p">()}</span><span class="o">:</span><span class="nx">j</span><span class="p">[</span><span class="nx">n</span><span class="p">]</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="k">return</span> <span class="kd">function</span><span class="p">(){</span><span class="kd">var</span> <span class="nx">b</span><span class="o">=</span><span class="p">[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">);</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">a</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="k">this</span><span class="p">,</span><span class="nx">b</span><span class="p">),</span><span class="nx">l</span><span class="p">()}}(</span><span class="nx">k</span><span class="p">[</span><span class="nx">n</span><span class="p">])),</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">[</span><span class="nx">n</span><span class="p">],</span><span class="nx">j</span><span class="p">,</span><span class="nx">b</span><span class="p">,</span><span class="nx">n</span><span class="p">,</span><span class="nx">h</span><span class="p">))}</span><span class="k">else</span><span class="o">!</span><span class="nx">c</span><span class="o">&amp;&amp;</span><span class="nx">l</span><span class="p">()}</span><span class="kd">var</span> <span class="nx">h</span><span class="o">=!!</span><span class="nx">a</span><span class="p">.</span><span class="nx">test</span><span class="p">,</span><span class="nx">i</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">load</span><span class="o">||</span><span class="nx">a</span><span class="p">.</span><span class="nx">both</span><span class="p">,</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">callback</span><span class="o">||</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="o">=</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="nx">a</span><span class="p">.</span><span class="nx">complete</span><span class="o">||</span><span class="nx">f</span><span class="p">,</span><span class="nx">m</span><span class="p">,</span><span class="nx">n</span><span class="p">;</span><span class="nx">c</span><span class="p">(</span><span class="nx">h</span><span class="o">?</span><span class="nx">a</span><span class="p">.</span><span class="nx">yep</span><span class="o">:</span><span class="nx">a</span><span class="p">.</span><span class="nx">nope</span><span class="p">,</span><span class="o">!!</span><span class="nx">i</span><span class="p">),</span><span class="nx">i</span><span class="o">&amp;&amp;</span><span class="nx">c</span><span class="p">(</span><span class="nx">i</span><span class="p">)}</span><span class="kd">var</span> <span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="o">=</span><span class="k">this</span><span class="p">.</span><span class="nx">yepnope</span><span class="p">.</span><span class="nx">loader</span><span class="p">;</span><span class="k">if</span><span class="p">(</span><span class="nx">e</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="nx">g</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="mi">0</span><span class="p">);</span><span class="k">else</span> <span class="k">if</span><span class="p">(</span><span class="nx">w</span><span class="p">(</span><span class="nx">a</span><span class="p">))</span><span class="k">for</span><span class="p">(</span><span class="nx">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="nx">i</span><span class="o">&lt;</span><span class="nx">a</span><span class="p">.</span><span class="nx">length</span><span class="p">;</span><span class="nx">i</span><span class="o">++</span><span class="p">)</span><span class="nx">j</span><span class="o">=</span><span class="nx">a</span><span class="p">[</span><span class="nx">i</span><span class="p">],</span><span class="nx">e</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">?</span><span class="nx">g</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="mi">0</span><span class="p">,</span><span class="nx">l</span><span class="p">,</span><span class="mi">0</span><span class="p">)</span><span class="o">:</span><span class="nx">w</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">?</span><span class="nx">B</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">:</span><span class="nb">Object</span><span class="p">(</span><span class="nx">j</span><span class="p">)</span><span class="o">===</span><span class="nx">j</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">l</span><span class="p">);</span><span class="k">else</span> <span class="nb">Object</span><span class="p">(</span><span class="nx">a</span><span class="p">)</span><span class="o">===</span><span class="nx">a</span><span class="o">&amp;&amp;</span><span class="nx">h</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">l</span><span class="p">)},</span><span class="nx">B</span><span class="p">.</span><span class="nx">addPrefix</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">b</span><span class="p">){</span><span class="nx">z</span><span class="p">[</span><span class="nx">a</span><span class="p">]</span><span class="o">=</span><span class="nx">b</span><span class="p">},</span><span class="nx">B</span><span class="p">.</span><span class="nx">addFilter</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">){</span><span class="nx">x</span><span class="p">.</span><span class="nx">push</span><span class="p">(</span><span class="nx">a</span><span class="p">)},</span><span class="nx">B</span><span class="p">.</span><span class="nx">errorTimeout</span><span class="o">=</span><span class="mi">1</span><span class="nx">e4</span><span class="p">,</span><span class="kc">null</span><span class="o">==</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyState</span><span class="o">&amp;&amp;</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="s2">&quot;loading&quot;</span><span class="p">,</span><span class="nx">b</span><span class="p">.</span><span class="nx">addEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">A</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">b</span><span class="p">.</span><span class="nx">removeEventListener</span><span class="p">(</span><span class="s2">&quot;DOMContentLoaded&quot;</span><span class="p">,</span><span class="nx">A</span><span class="p">,</span><span class="mi">0</span><span class="p">),</span><span class="nx">b</span><span class="p">.</span><span class="nx">readyState</span><span class="o">=</span><span class="s2">&quot;complete&quot;</span><span class="p">},</span><span class="mi">0</span><span class="p">)),</span><span class="nx">a</span><span class="p">.</span><span class="nx">yepnope</span><span class="o">=</span><span class="nx">k</span><span class="p">(),</span><span class="nx">a</span><span class="p">.</span><span class="nx">yepnope</span><span class="p">.</span><span class="nx">executeStack</span><span class="o">=</span><span class="nx">h</span><span class="p">,</span><span class="nx">a</span><span class="p">.</span><span class="nx">yepnope</span><span class="p">.</span><span class="nx">injectJs</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">i</span><span class="p">,</span><span class="nx">j</span><span class="p">){</span><span class="kd">var</span> <span class="nx">k</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;script&quot;</span><span class="p">),</span><span class="nx">l</span><span class="p">,</span><span class="nx">o</span><span class="p">,</span><span class="nx">e</span><span class="o">=</span><span class="nx">e</span><span class="o">||</span><span class="nx">B</span><span class="p">.</span><span class="nx">errorTimeout</span><span class="p">;</span><span class="nx">k</span><span class="p">.</span><span class="nx">src</span><span class="o">=</span><span class="nx">a</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">o</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">k</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">o</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">o</span><span class="p">]);</span><span class="nx">c</span><span class="o">=</span><span class="nx">j</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">,</span><span class="nx">k</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="o">!</span><span class="nx">l</span><span class="o">&amp;&amp;</span><span class="nx">g</span><span class="p">(</span><span class="nx">k</span><span class="p">.</span><span class="nx">readyState</span><span class="p">)</span><span class="o">&amp;&amp;</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">(),</span><span class="nx">k</span><span class="p">.</span><span class="nx">onload</span><span class="o">=</span><span class="nx">k</span><span class="p">.</span><span class="nx">onreadystatechange</span><span class="o">=</span><span class="kc">null</span><span class="p">)},</span><span class="nx">m</span><span class="p">(</span><span class="kd">function</span><span class="p">(){</span><span class="nx">l</span><span class="o">||</span><span class="p">(</span><span class="nx">l</span><span class="o">=</span><span class="mi">1</span><span class="p">,</span><span class="nx">c</span><span class="p">(</span><span class="mi">1</span><span class="p">))},</span><span class="nx">e</span><span class="p">),</span><span class="nx">i</span><span class="o">?</span><span class="nx">k</span><span class="p">.</span><span class="nx">onload</span><span class="p">()</span><span class="o">:</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">k</span><span class="p">,</span><span class="nx">n</span><span class="p">)},</span><span class="nx">a</span><span class="p">.</span><span class="nx">yepnope</span><span class="p">.</span><span class="nx">injectCss</span><span class="o">=</span><span class="kd">function</span><span class="p">(</span><span class="nx">a</span><span class="p">,</span><span class="nx">c</span><span class="p">,</span><span class="nx">d</span><span class="p">,</span><span class="nx">e</span><span class="p">,</span><span class="nx">g</span><span class="p">,</span><span class="nx">i</span><span class="p">){</span><span class="kd">var</span> <span class="nx">e</span><span class="o">=</span><span class="nx">b</span><span class="p">.</span><span class="nx">createElement</span><span class="p">(</span><span class="s2">&quot;link&quot;</span><span class="p">),</span><span class="nx">j</span><span class="p">,</span><span class="nx">c</span><span class="o">=</span><span class="nx">i</span><span class="o">?</span><span class="nx">h</span><span class="o">:</span><span class="nx">c</span><span class="o">||</span><span class="nx">f</span><span class="p">;</span><span class="nx">e</span><span class="p">.</span><span class="nx">href</span><span class="o">=</span><span class="nx">a</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">rel</span><span class="o">=</span><span class="s2">&quot;stylesheet&quot;</span><span class="p">,</span><span class="nx">e</span><span class="p">.</span><span class="nx">type</span><span class="o">=</span><span class="s2">&quot;text/css&quot;</span><span class="p">;</span><span class="k">for</span><span class="p">(</span><span class="nx">j</span> <span class="k">in</span> <span class="nx">d</span><span class="p">)</span><span class="nx">e</span><span class="p">.</span><span class="nx">setAttribute</span><span class="p">(</span><span class="nx">j</span><span class="p">,</span><span class="nx">d</span><span class="p">[</span><span class="nx">j</span><span class="p">]);</span><span class="nx">g</span><span class="o">||</span><span class="p">(</span><span class="nx">n</span><span class="p">.</span><span class="nx">parentNode</span><span class="p">.</span><span class="nx">insertBefore</span><span class="p">(</span><span class="nx">e</span><span class="p">,</span><span class="nx">n</span><span class="p">),</span><span class="nx">m</span><span class="p">(</span><span class="nx">c</span><span class="p">,</span><span class="mi">0</span><span class="p">))}}(</span><span class="k">this</span><span class="p">,</span><span class="nb">document</span><span class="p">),</span><span class="nx">Modernizr</span><span class="p">.</span><span class="nx">load</span><span class="o">=</span><span class="kd">function</span><span class="p">(){</span><span class="nx">yepnope</span><span class="p">.</span><span class="nx">apply</span><span class="p">(</span><span class="nb">window</span><span class="p">,[].</span><span class="nx">slice</span><span class="p">.</span><span class="nx">call</span><span class="p">(</span><span class="nx">arguments</span><span class="p">,</span><span class="mi">0</span><span class="p">))};</span></div></pre></div>
          </td>
        </tr>
      </table>
  </div>

          </div>
        </div>

        <a href="#jump-to-line" rel="facebox" data-hotkey="l" class="js-jump-to-line" style="display:none">Jump to Line</a>
        <div id="jump-to-line" style="display:none">
          <h2>Jump to Line</h2>
          <form accept-charset="UTF-8" class="js-jump-to-line-form">
            <input class="textfield js-jump-to-line-field" type="text">
            <div class="full-button">
              <button type="submit" class="button">Go</button>
            </div>
          </form>
        </div>

      </div>
    </div>
</div>

<div id="js-frame-loading-template" class="frame frame-loading large-loading-area" style="display:none;">
  <img class="js-frame-loading-spinner" src="https://a248.e.akamai.net/assets.github.com/images/spinners/octocat-spinner-128.gif?1347543527" height="64" width="64">
</div>


        </div>
      </div>
      <div class="context-overlay"></div>
    </div>

      <div id="footer-push"></div><!-- hack for sticky footer -->
    </div><!-- end of wrapper - hack for sticky footer -->

      <!-- footer -->
      <div id="footer">
  <div class="container clearfix">

      <dl class="footer_nav">
        <dt>GitHub</dt>
        <dd><a href="https://github.com/about">About us</a></dd>
        <dd><a href="https://github.com/blog">Blog</a></dd>
        <dd><a href="https://github.com/contact">Contact &amp; support</a></dd>
        <dd><a href="http://enterprise.github.com/">GitHub Enterprise</a></dd>
        <dd><a href="http://status.github.com/">Site status</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Applications</dt>
        <dd><a href="http://mac.github.com/">GitHub for Mac</a></dd>
        <dd><a href="http://windows.github.com/">GitHub for Windows</a></dd>
        <dd><a href="http://eclipse.github.com/">GitHub for Eclipse</a></dd>
        <dd><a href="http://mobile.github.com/">GitHub mobile apps</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Services</dt>
        <dd><a href="http://get.gaug.es/">Gauges: Web analytics</a></dd>
        <dd><a href="http://speakerdeck.com">Speaker Deck: Presentations</a></dd>
        <dd><a href="https://gist.github.com">Gist: Code snippets</a></dd>
        <dd><a href="http://jobs.github.com/">Job board</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>Documentation</dt>
        <dd><a href="http://help.github.com/">GitHub Help</a></dd>
        <dd><a href="http://developer.github.com/">Developer API</a></dd>
        <dd><a href="http://github.github.com/github-flavored-markdown/">GitHub Flavored Markdown</a></dd>
        <dd><a href="http://pages.github.com/">GitHub Pages</a></dd>
      </dl>

      <dl class="footer_nav">
        <dt>More</dt>
        <dd><a href="http://training.github.com/">Training</a></dd>
        <dd><a href="https://github.com/edu">Students &amp; teachers</a></dd>
        <dd><a href="http://shop.github.com">The Shop</a></dd>
        <dd><a href="/plans">Plans &amp; pricing</a></dd>
        <dd><a href="http://octodex.github.com/">The Octodex</a></dd>
      </dl>

      <hr class="footer-divider">


    <p class="right">&copy; 2013 <span title="0.11007s from fe16.rs.github.com">GitHub</span>, Inc. All rights reserved.</p>
    <a class="left" href="https://github.com/">
      <span class="mega-icon mega-icon-invertocat"></span>
    </a>
    <ul id="legal">
        <li><a href="https://github.com/site/terms">Terms of Service</a></li>
        <li><a href="https://github.com/site/privacy">Privacy</a></li>
        <li><a href="https://github.com/security">Security</a></li>
    </ul>

  </div><!-- /.container -->

</div><!-- /.#footer -->


    <div class="fullscreen-overlay js-fullscreen-overlay" id="fullscreen_overlay">
  <div class="fullscreen-container js-fullscreen-container">
    <div class="textarea-wrap">
      <textarea name="fullscreen-contents" id="fullscreen-contents" class="js-fullscreen-contents" placeholder="" data-suggester="fullscreen_suggester"></textarea>
          <div class="suggester-container">
              <div class="suggester fullscreen-suggester js-navigation-container" id="fullscreen_suggester"
                 data-url="/h5bp/html5-boilerplate/suggestions/commit">
              </div>
          </div>
    </div>
  </div>
  <div class="fullscreen-sidebar">
    <a href="#" class="exit-fullscreen js-exit-fullscreen tooltipped leftwards" title="Exit Zen Mode">
      <span class="mega-icon mega-icon-normalscreen"></span>
    </a>
    <a href="#" class="theme-switcher js-theme-switcher tooltipped leftwards"
      title="Switch themes">
      <span class="mini-icon mini-icon-brightness"></span>
    </a>
  </div>
</div>



    <div id="ajax-error-message" class="flash flash-error">
      <span class="mini-icon mini-icon-exclamation"></span>
      Something went wrong with that request. Please try again.
      <a href="#" class="mini-icon mini-icon-remove-close ajax-error-dismiss"></a>
    </div>

    
    
    <span id='server_response_time' data-time='0.11061' data-host='fe16'></span>
    
  </body>
</html>

